{"version":3,"sources":["components/Header/Header.tsx","components/TaskListHeader/TaskListHeader.tsx","components/Task/TaskListItem.tsx","components/TaskList/TaskList.tsx","types/task.ts","components/TaskDialog/TaskDialog.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","react_default","a","createElement","className","onClick","onAddTask","TaskListHeader","index_es","icon","faList","title","getTimeDisplay","timestamp","Date","setHours","getDate","toLocaleString","month","TaskListItem","_useState","useState","task","_useState2","Object","slicedToArray","setTask","useEffect","toggleComplete","isCompleted","faCheck","onClickTask","name","description","deadline","TaskList","console","log","tasks","Fragment","components_TaskListHeader_TaskListHeader","map","index","components_Task_TaskListItem","key","id","Task","arguments","length","undefined","repeat","completed","created","classCallCheck","this","createClass","value","getCopy","_","TaskDialog","editMode","setEditMode","_useState3","_useState4","taskName","setTaskName","_useState5","_useState6","taskDeadline","setTaskDeadline","_useState7","_useState8","taskDescription","setTaskDescription","toISOString","substr","onDelete","faTrash","faPen","type","placeholder","onChange","event","target","faCalendarCheck","faClipboardList","onClose","disabled","setDetails","onSubmit","App","editTask","setEditTask","setTasks","getNewId","data","reduce","max","Math","localStorage","getItem","loadedTasks","JSON","parse","setItem","stringify","weekDay","getDay","startOfCurrentDay","beginOfWeek","endOfWeek","tasksThisWeek","filter","upcomingTasks","components_Header_Header","TaskDialog_TaskDialog_TaskDialog","concat","toConsumableArray","t","setId","components_TaskList_TaskList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0efce937.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.css';\r\n\r\nconst Header = (props: {onAddTask: () => void}) => {\r\n    return(\r\n        <div className=\"header\">\r\n            <div>Tidy</div>\r\n            <div className=\"version\">0.1.0</div>\r\n            <div className=\"spacer\"></div>\r\n            <button className=\"button\" onClick={props.onAddTask}>+Add Task</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './TaskListHeader.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TaskListHeader = (props: {title:string}) => {\r\n    return(\r\n        <div className=\"list-header\">\r\n            <div className=\"icon\">\r\n                <FontAwesomeIcon icon={faList} />\r\n            </div>\r\n            <div className=\"title\">\r\n                {props.title}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskListHeader;","import React, { useState, useEffect } from \"react\";\r\nimport './TaskListItem.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { Task } from \"../../types/task\";\r\n\r\nconst TaskListItem = (props: any) => {\r\n    const [task, setTask] = useState<Task>(props.task);\r\n\r\n    useEffect(() => {\r\n        setTask(props.task);\r\n    }, [props.task]);\r\n\r\n    return(<div className=\"task\">\r\n                <div className=\"task__state\" onClick={() => {\r\n                    setTask(task.toggleComplete());\r\n                 }}>\r\n                    <div className=\"checkbox\">\r\n                        { task.isCompleted() ? <div className=\"animation__check\" ><FontAwesomeIcon icon={faCheck} /></div> : '' }\r\n                    </div>\r\n                </div>\r\n                <div className=\"task__info\" onClick={() => {\r\n                    props.onClickTask(task);\r\n                 }}>\r\n                    <div className=\"task__name\">{task.name}</div>\r\n                    <div className=\"task__description\">{task.description}</div>                \r\n                </div>\r\n                <div className=\"task__time\">\r\n                    {getTimeDisplay(task.deadline)}\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nconst getTimeDisplay = (timestamp: number) => {\r\n    const taskDate = new Date(timestamp).setHours(0,0,0,0);\r\n    const today = new Date().setHours(0,0,0,0);\r\n\r\n\r\n\r\n    if(taskDate === today) {\r\n        return 'Today!'\r\n    }\r\n\r\n    return new Date(timestamp).getDate() + ' ' + new Date(timestamp).toLocaleString('default', { month: 'long' })\r\n}\r\n\r\nexport default TaskListItem;","import React from \"react\";\r\nimport './TaskList.css';\r\n\r\nimport TaskListHeader from \"../TaskListHeader/TaskListHeader\";\r\nimport { Task } from \"../../types/task\";\r\nimport TaskListItem from \"../Task/TaskListItem\";\r\n\r\nconst TaskList = (props: {title:string ,tasks: Task[], onClickTask: (task: Task) => void}) => {\r\n    console.log('TaskList',props.title,props.tasks);\r\n\r\n    return(<>\r\n        <TaskListHeader title={props.title} />\r\n        <div className=\"task-list\">\r\n            {props.tasks.map((task: Task, index: number) => \r\n                <TaskListItem key={task.id} task={task} onClickTask={props.onClickTask} />\r\n            )}\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default TaskList;","export class Task {\r\n    name: string;\r\n    description: string;  \r\n    completed: number;\r\n    created: number;\r\n    deadline: number;\r\n    repeat: number;    \r\n    id: number;\r\n\r\n    constructor(name: string = '', \r\n                description: string = '',\r\n                deadline: number = +new Date(),\r\n                repeat: number = 0,\r\n                completed: number = 0,\r\n                created: number = +new Date(),\r\n                id: number = -1) {\r\n        this.name = name;\r\n        this.description = description;  \r\n        this.deadline = deadline;\r\n        this.repeat = repeat;\r\n        this.completed = completed;\r\n        this.created = created;\r\n        this.id = id;\r\n    }\r\n\r\n    getCopy(name: string = this.name,\r\n            description: string = this.description,\r\n            deadline: number = this.deadline,\r\n            repeat: number = this.repeat,\r\n            completed: number = this.completed,\r\n            created: number = this.created,\r\n            id: number = this.id) {\r\n        return new Task(\r\n            name,\r\n            description,\r\n            deadline,\r\n            repeat,\r\n            completed,\r\n            created,\r\n            id\r\n        );\r\n    }\r\n\r\n    setDetails( name: string = this.name,\r\n                description: string = this.description,\r\n                deadline: number = this.deadline) {\r\n        return this.getCopy(name, description, deadline);\r\n    }\r\n\r\n    setId(id: number) {\r\n        const _ = undefined;\r\n        return this.getCopy(_,_,_,_,_,_,id);\r\n    }\r\n\r\n    toggleComplete() {\r\n        const _ = undefined;\r\n        return this.getCopy(_,_,_,_,this.isCompleted() ? 0 : +new Date());\r\n    }\r\n\r\n    isCompleted() {\r\n        return this.completed !== 0;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './TaskDialog.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPen, faCalendarCheck, faClipboardList, faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const TaskDialog = (props: any) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskDeadline, setTaskDeadline] = useState('');\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(props.task) {\r\n            setTaskName(props.task.name);\r\n            setTaskDeadline(new Date(props.task.deadline).toISOString().substr(0,10));\r\n            setTaskDescription(props.task.description);\r\n\r\n            if(props.task.id >= 0) {\r\n                setEditMode(true);\r\n            }\r\n        } else {    \r\n            setTaskName('');\r\n            setTaskDeadline('');\r\n            setTaskDescription('');\r\n            setEditMode(false);\r\n        }\r\n    }, [props.task]);\r\n\r\n    return (\r\n    <div className={'dialog-container' + (props.task ? ' open' : '')}>\r\n        <div className=\"task-dialog\">\r\n            <div className=\"dialog-header\">\r\n                { editMode ? 'Adjust task' : 'Add task' }\r\n                <div className=\"spacer\"></div>\r\n                { editMode ? <div onClick={()=> props.onDelete(props.task)}><FontAwesomeIcon icon={faTrash} /></div> : ''}\r\n            </div>\r\n            <div className=\"dialog-content\">\r\n                <div className=\"input-container\">\r\n                    <div className=\"input-title\">\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" placeholder=\"Task name..\" value={taskName} onChange={event => {\r\n                            setTaskName((event.target as HTMLInputElement).value);\r\n                        }}></input>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <div className=\"input-title\">\r\n                        <FontAwesomeIcon icon={faCalendarCheck} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"date\" placeholder=\"Task deadlvine..\" value={taskDeadline} onChange={event => {\r\n                            setTaskDeadline((event.target as HTMLInputElement).value);\r\n                        }}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <div className=\"input-title\">\r\n                        <FontAwesomeIcon icon={faClipboardList} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" placeholder=\"Task description..\" value={taskDescription} onChange={event => {\r\n                            setTaskDescription((event.target as HTMLInputElement).value);\r\n                        }}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialog-actions\">\r\n                <button onClick={() => props.onClose()}>Cancel</button>\r\n                <button disabled={taskName === '' || taskDescription === ''} onClick={() => {\r\n                        const task = props.task.setDetails(taskName, taskDescription, +new Date(taskDeadline));\r\n                        props.onSubmit(task);\r\n                    }} className=\"button--type-success\">\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                    <div className=\"button__text\">Accept</div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>) \r\n}","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header/Header';\r\nimport TaskList from './components/TaskList/TaskList';\r\nimport { Task } from './types/task';\r\nimport { TaskDialog } from './components/TaskDialog/TaskDialog';\r\n\r\nconst App: React.FC = () => {\r\n  const [editTask, setEditTask] = useState<Task>();\r\n  const [tasks, setTasks] = useState<Task[]>([]);  \r\n\r\n  const getNewId = () => {    \r\n    const maxId = tasks.map((data: Task) => data.id).reduce((max: number, value: number) => Math.max(max,value), 0);\r\n    return maxId + 1;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('load from storage');\r\n    if(localStorage.getItem('tasks')) {\r\n      const loadedData = JSON.parse(localStorage.getItem('tasks') || '');\r\n\r\n      const loadedTasks = loadedData.map((data: any) => new Task(\r\n        data.name,\r\n        data.description,\r\n        data.deadline,\r\n        data.repeat,\r\n        data.completed,\r\n        data.created,\r\n        data.id\r\n      ));\r\n\r\n      setTasks(loadedTasks);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  // Store length of a day (in ms), the current week day (monday = 0, sunday = 6) \r\n  // and the timestamp start for today\r\n  const dayLenght = 1000 * 60 * 60 * 24;\r\n  const weekDay = (+(new Date().getDay()) + 6) % 7;\r\n  const startOfCurrentDay = new Date().setHours(0,0,0,0);\r\n\r\n  // Calculate the timestamps for the start and end of the week\r\n  const beginOfWeek = startOfCurrentDay - (weekDay * dayLenght);\r\n  const endOfWeek = startOfCurrentDay + dayLenght;\r\n\r\n  // Filter tasks to only show tasks from this week\r\n  const tasksThisWeek = tasks.filter(task => task.deadline > beginOfWeek && task.deadline < endOfWeek);\r\n\r\n  // Show any other tasks with deadlines after the current week\r\n  const upcomingTasks = tasks.filter(task => task.deadline >= endOfWeek);\r\n\r\n  const onClickTask = (task: Task) => {\r\n    setEditTask(task);\r\n  }\r\n\r\n  return (<>\r\n    <Header onAddTask={() => setEditTask(new Task())}></Header>\r\n    <TaskDialog task={editTask} \r\n        onClose={() => setEditTask(undefined)} \r\n        onSubmit={(task: Task) => {   \r\n          setEditTask(undefined);\r\n          if(task.id >= 0) {\r\n            setTasks([...(tasks.filter(t => t.id !== task.id)), task.setId(getNewId())]);\r\n          } else {\r\n            setTasks([...tasks, task.setId(getNewId())]);\r\n          }  \r\n        }}\r\n        onDelete={(task: Task) => {\r\n          setEditTask(undefined);\r\n          setTasks([...(tasks.filter(t => t.id !== task.id))]);\r\n        }}\r\n      ></TaskDialog>\r\n    \r\n    <TaskList tasks={tasksThisWeek} title={\"Tasks this week\"} onClickTask={onClickTask}></TaskList>\r\n    <TaskList tasks={upcomingTasks} title={\"Upcoming tasks\"} onClickTask={onClickTask}></TaskList>\r\n  </>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}